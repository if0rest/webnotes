для верстальщика - препрцессоры и адаптивная вестка
frontend - js или $

На хостинге у сайтов статический IP.

GULP - система для описания произвольного вида задач, имеет кучу плагинов.
Что делает Gulp? Собирает все файлы в директории, обрабатывает CoffeeScript, сжать, оъединить в 1 и потом скопировать в итоговое место.
Webpak - система сборки, заточенная под JS.
----------------------------------------------------------------------
(max-width: 610px) - стили применяются до 610px. Если  больше, в работу включается стили с (max-width: 950px). Т.о. стли отображаются, пока размер окна не достигнет большего значения.
(min-width: 400px) - стили применяются, пока размер окна не станет меньше 400px.
min и max - это пределы работы стилей.
min-width|---стили применяются---  и  ---стили применются|max-width

(min-width: 400px) ПРИМЕНЯЮТСЯ СТИЛИ (max-width: 900px). min и max - это границы, в рамках кот. применяются стили.

Подключение media-query в HTML:
<link rel="stylesheet" href="responsive.css" media="(min-width:400px) and (max-width:900px)">
И в CSS:
@media only screen and (max-width: 610px){}
@media (min-width: 600px) and (max-width: 980px){}	// если экран будет < 600px, то применятся след. стили.

Адаптивный дизайн - это стек техник и концепций по вертске и дизайну, обеспечивающий корректное отображение сайта на разных устройствах.

Отвечает за отображение страницы на моб.устройствах.
<meta name="viewport" content="width=device-width, initial-scale=1.0">
Содержимое "content" решает проблему, когда открываете сайт, а там все мелко, мелкий шрифт: ширина страницы = ширине девайса + адекватный масштаб.

14px/20px - размер шрифта/лайнхайт. Образец: 100%/1.5em.
Чтобы перевести 30px в em, нужно 30px/16px(стандарт) = 1.875em.

Типы верстки: статичная, резиновая, гибридная.
----------------------------------------------------------------------

Если сайт динамический, Апач принимает http-запрос, отдает его php-интерпретатору, БД отрабатывает, все крутится-вертится, а на выходе - html.

Насколько понял, сначала строится DOM-дерево, после рендерится страница.

Для работы со спец. выражениями есть класс RegExp:
	var pattern = new RegExp("\w+", "gim")

Свойство .innerHTML отвечает за внутренне содержимое объекта.

"Весь JS работает таким образом: мы в браузере цепляемся к событиям, кот. есть у объектов, и при наступлении этих событий мы меняем с помощью методов свойства объекта."


if($_GET['country'] == 1) {
	echo json_encode(['1' => ''])
}


----------------------------------------------------------------------
Формат JSON позволяет передавать массив на сервер и получать его с сервера.
Клиентские данные преобразуются в понятный серверу JSON-объект и отправляются на сервер для обработки. В ответ сервер присылает другой JSON-объект, кот. преобразуется в понятный JS тип данных.

JSON используется для представления объектов в виде строки. Это один из наиболее удобных форматов данных при взаимодействии с JavaScript. Если нужно с сервера взять объект с данными и передать его клиенту, то в качестве промежуточного формата – для передачи по сети, почти всегда используют именно его.
JSON.parse – читает объекты из строки в формате JSON. Вызов JSON.parse(str) превратит строку с данными в формате JSON в JavaScript-объект/массив/значение. Объекты в формате JSON похожи на обычные JavaScript-объекты, но отличаются от них более строгими требованиями к строкам – они должны быть именно в двойных кавычках.
JSON.stringify – превращает объекты в строку в формате JSON, используется, когда нужно из JavaScript передать данные по сети.

Наиболее частое распространенное использование JSON - пересылка данных от сервера к браузеру. Обычно данные JSON доставляются с помощью AJAX, который позволяет обмениваться данными браузеру и серверу без необходимости перезагружать страницу

В реальном приложении ваш JS код будет получать заказ в виде строки JSON в AJAX ответе от скрипта сервера, передавать строку методу JSON.parse(), а затем использовать данные для отображения на странице пользователя.
----------------------------------------------------------------------

СКВ - система, регистрирующая изменения в файле, чтобы в дальнейшем  была возможность вернуться к его прежней версии.
СКВ бывают локальными (доступ только у разраба), центализованными (1 репозиторий, неск. пользователей) и распределенными (репозиторий на сервере + на компе у каждого разработчика: если что не так с сервом, можно бекапнуться с репозитория другого разработчика).

----------------------------------------------------------------------
Есть 2 стандартных способа отмены обтекания (float): overflow:hidden или clear:both.

margin: 20px 0 30px;		// сверху слева-справа снизу

----------------------------------------------------------------------
Правило вертикальных отступов:
"Если margin-bottom первого el накладывается на margin-top второго, то эти margin не суммируются, а берется наибольший margin из предложенных".
"Вертикальный margin между элементами = max margin одного из элементов".

При горизонтальном расположении блоков с исп. inline-block, могут появляться непонятные отступы между элементами - это следствие \n в HTML. Убери переносы строк и все ок. Либо исп. float:left.

"Мы тому элементу, из кот. утекают маржины, ставим overflow:hidden вместо border, и все тановится норм. Это допустимое боевое решение".
<!> Свойством 'overflow:hidden' мы запрещаем детям выходить за пределы родителя. Родитель растягивается, дабы не выпустить.

Чтобы растянуть родитель, у которого дети с float, допиши ему класс:
.clearfix::after {
	content: "";
	display: block;
	clear: both;
}

* "HTML и CSS - хитрости блочной модели" 01:04:20

FlexBox позволяет делать классную адаптивку без медиа-запросов.

----------------------------------------------------------------------

/* -------------------------------
		Шапка сайта
----------------------------------*/

----------------------------------------------------------------------

base64() - это шифрование, не кодирование.

ВСЕГДА про POST-запросе, чтобы данные не были сокрушены, чтобы кириллица хорошо отправилась, обязательно пишите:
	request.setRequestHeader('Content-Type', 'application/x-www-form-urlencode');

Извлечени данных формы средствами JS.
	var inp_email = document.querySelector('input[name=email]');
	alert(inp_email.value);

----------------------------------------------------------------------
Для редиректа в JS:
	document.location = 'vk.com';

В PHP для передачи данны массива клиенту исп. 'serialize()' или 'json_encode', кот. преобразует [] в строку.
----------------------------------------------------------------------
Для отправки формы вместо нативной функции mail() можно (нужно!) исп. крутую и надежную библиотеку PHPMailer.